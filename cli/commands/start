#!/usr/bin/env bash
#Starts Starling Server

set -e

cli_help_install() {
    echo -e "
Command: start [kind/k3s] (options?)

Usage:
    No Arguments\t\tStarts kubernetes and deployment only
    kind/k3s\t\tStarts kubernetes and starts the simulator deployment
    dashboard\t\tStarts kubernetes dashboard
"
}

# Check if running using starling cli
if [ -z ${STARLING_COMMON_SOURCED+'check'} ]; then
    echo "Common not sourced, please run from starling cli"
    exit 1
fi

# Parse arguments
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -h|--help|help)
            cli_help_install
            exit 1
            ;;
        kind)
            S_KIND=1
            shift
            ;;
        k3s)
            S_K3S=1
            shift
            ;;
        dashboard)
            S_DASH=1
            shift
            ;;
        *)  # unknown option
            echo "Unknown Argument/ Option $1"
            cli_help_install
            exit 1
            shift # past argument
            ;;
    esac
done

# Start k3s

# Start kind
if [[ $S_KIND ]]; then
    kind create cluster --config=${STARLING_WORKDIR}/config/kind_config.yaml
fi

# Start Dashboard
if [[ $S_DASH ]]; then
    echo "Deploying Kubernetes Dashboard"
    echo "See: https://rancher.com/docs/k3s/latest/en/installation/kube-dashboard/ for more details"
    echo "==================="
    GITHUB_URL=https://github.com/kubernetes/dashboard/releases
    VERSION_KUBE_DASHBOARD=$(curl -w '%{url_effective}' -I -L -s -S ${GITHUB_URL}/latest -o /dev/null | sed -e 's|.*/||')
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${VERSION_KUBE_DASHBOARD}/aio/deploy/recommended.yaml
    kubectl apply -f ${STARLING_WORKDIR}/deployment/resources/dashboard.admin.yaml #dashboard.admin-user.yml -f deployment/resources/dashboard.admin-user-role.yml
    echo "==================="

    DASHBOARD_TOKEN=`kubectl -n kubernetes-dashboard describe secret admin-user-token | grep ^token | cut -c 13-`

    echo "The Dashboard is available at https://localhost:31771"
    echo "You will need the dashboard token, to access it."
    if command -v xclip; then
        set +e # Will fail if there is no xserver running, e.g. via ssh. Fail silently
        echo $DASHBOARD_TOKEN | xclip -selection clipboard -i
        echo "The token has been copied onto your clipboard, it is also printed below"
        set -e
    else
        echo "Copy and paste the token from below"
    fi
    echo "-----BEGIN DASHBOARD TOKEN-----"
    echo $DASHBOARD_TOKEN
    echo "-----END DASHBOARD TOKEN-----"
    echo "Note: your browser may not like the self signed ssl certificate, ignore and continue for now"
    echo "To get the token yourself run: kubectl -n kubernetes-dashboard describe secret admin-user-token"
    echo "==================="
fi