#!/usr/bin/env bash
# Installs Base Starling Dependencies

set -e 

cli_help_install() {
    echo -e "
Command: install [kube/k3s?] (options?)

Sudo privileges are required

Usage:
    No Arguments\tInstalls minimum requirements for running Starling Software
    kubectl\t\tAdditionally downloads and install kubectl (For connecting to existing kubernetes instance)
    k3s\t\t\tAddition downloads and installs k3s (For creating your own kubernetes instances)

General Options
    --skip-docker\t\tSkips Docker installation (if already installed)

Options for install kube (and k3s):
    --write-config-file file\t\tSpecify file and path of kubectl configfile

Options for installing k3s
    --node-external-ip ip\t\tSpecify the external facing IP address of the k3s server in case of multiple networks.

"
}

# Check if running using starling cli
if [ -z ${STARLING_COMMON_SOURCED+'check'} ]; then
    echo "Common not sourced, please run from starling cli"
    exit 1
fi

# Parse arguments
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -h|--help|help)
           
            shift # past argument
            ;;
        kubectl)
            INSTALL_KUBE=1
            shift
            ;;
        k3s)
            INSTALL_KUBE=1
            INSTALL_K3S=1
            shift
            ;;
        --skip-docker)
            SKIP_DOCKER=1
            shift
            ;;
        --config-file)
            STARLING_KUBE_CONFIG_FILE_PATH=$2 
            shift
            shift
            ;;
        --node-external-ip)
            EXTERNAL_IP=$2
            shift
            shift
            ;;
        *)  # unknown option
            echo "Unknown Argument/ Option $1"
            cli_help_install
            exit 1
            shift # past argument
            ;;
    esac
done

# Update system
sudo apt-get update

# Install Python and Pip
sudo apt-get install -y python3 python3-pip curl uidmap
pip3 install click

# Install docker
if  [[ ! $SKIP_DOCKER && ! "$(command -v docker &> /dev/null)" ]]; then
    echo "Installing docker"
    curl -fsSL https://get.docker.com | sudo bash -s
    dockerd-rootless-setuptool.sh install
    for rcfile in "${RC_FILES[@]}"; do
        if [[ -f $rcfile ]]; then
            { 
                export XDG_RUNTIME_DIR=/home/docker/.docker/run;
                export PATH=/usr/bin:$PATH;
                export DOCKER_HOST=unix:///home/docker/.docker/run/docker.sock;
            } >> "$rcfile"
        fi
    done

else
    echo "Docker already exists, skipping install"
fi

# Install k3s
if [[ $INSTALL_KUBE || $INSTALL_K3S ]]; then
    echo "Created directory $(dirname "${STARLING_KUBE_CONFIG_FILE_PATH}") for storing config file"
    mkdir -p "$(dirname "${STARLING_KUBE_CONFIG_FILE_PATH}")"

    K3S_ADDITIONAL_ARGS="--docker --write-kubeconfig $STARLING_KUBE_CONFIG_FILE_PATH --write-kubeconfig-mode  644"
    export INSTALL_K3S_SKIP_START=true
    if [[ $EXTERNAL_IP ]]; then
        echo "External IP set to ${EXTERNAL_IP}"
        K3S_ADDITIONAL_ARGS="${K3S_ADDITIONAL_ARGS} --node-external-ip ${EXTERNAL_IP}"
    fi

    if [[ ! $INSTALL_K3S ]]; then
        # If only install kubectl
        echo "Only Kubectl to install, skipping k3s enable and start"
        export INSTALL_K3S_SKIP_ENABLE=true
    fi

    # Only needs to be run once per system
    # Download and start kubernetes master node 
    echo "Downloading and Installing K3s in systemd"
    echo "The configuration file will be placed in $CONFIGFILE"
    echo "root is required for initial installation (running of the kubernetes systemd)"
    curl -sfL https://get.k3s.io | sudo bash -s -- "${K3S_ADDITIONAL_ARGS}"

    echo "Setting KUBECONFIG in rcfiles"
    for rcfile in "${RC_FILES[@]}"; do
        if [[ -f $rcfile ]]; then
            case $(grep -F KUBECONFIG "$rcfile" >/dev/null; echo $?) in
                0)
                    echo "KUBECONFIG already set in $rcfile, KUBECONFIG NOT added to $rcfile"
                    ;;
                1)
                    echo "export KUBECONFIG=$STARLING_KUBE_CONFIG_FILE_PATH" >> $rcfile
                    echo "$rcfile appended KUBECONFIG, set to $STARLING_KUBE_CONFIG_FILE_PATH"
                    ;;
                *)
                    echo "Error occured in setting KUBECONFIG in $rcfile"
                    RED='\033[0;31m'
                    NC='\033[0m'
                    echo "${RED}Please manually ensure that KUBECONFIG is set to $STARLING_KUBE_CONFIG_FILE_PATH in .profile or .bashrc file${NC}"
                    ;;
            esac
        else
            echo "$rcfile not found"
        fi
    done
    echo "K3s or kubectl install complete"
fi

